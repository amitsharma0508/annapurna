{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport emailjs from 'emailjs-com';\nlet CartComponent = class CartComponent {\n  constructor(cartService, http, route) {\n    this.cartService = cartService;\n    this.http = http;\n    this.route = route;\n    this.cartItems = [];\n    this.totalPrice = 0;\n    this.btnValue = 'Send Email';\n    this.cartItems.forEach(item => {\n      item.quantity = 1;\n    });\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.currentUserEmail = params['email'];\n      this.actualEmail = params['actualEmail'];\n      this.quantity = params['quantity'];\n      console.log(this.currentUserEmail + \"currentuseremail\", this.quantity + \"Quantity\");\n    });\n    this.fetchCartItems(this.currentUserEmail);\n    console.log(this.actualEmail + \"Actual Email\");\n    this.cartService.userDetails.snapshotChanges().subscribe(data => {\n      const userDetails = data.find(item => item.payload.val().email === this.actualEmail);\n\n      if (userDetails) {\n        this.userDetail = userDetails.payload.val();\n        console.log(this.userDetail);\n      } else {\n        console.log('User details not found!');\n        console.log(this.actualEmail);\n      }\n    });\n    this.openModal();\n  }\n\n  fetchCartItems(currentUserEmail) {\n    this.cartService.getCartItems(currentUserEmail).subscribe(items => {\n      this.cartItems = items;\n\n      for (let i = 0; i < this.cartItems.length; i++) {\n        const priceWithoutSymbol = this.cartItems[i].productPrice.replace('$', '');\n        const priceAsNumber = parseFloat(priceWithoutSymbol);\n        this.totalPrice += priceAsNumber;\n      }\n\n      console.log(items);\n    });\n  }\n\n  removeFromCart(item) {\n    this.cartService.deleteFromCart(item, this.currentUserEmail).then(() => {\n      // Item removed from cart successfully\n      console.log(\"working\");\n    }).catch(error => {\n      console.log('Error removing item from cart:', error);\n    });\n  }\n\n  calculateLineTotal(item) {\n    return item.price * item.quantity;\n  }\n\n  calculateSubtotal() {\n    let subtotal = 0;\n\n    for (const item of this.cartItems) {\n      subtotal += this.calculateLineTotal(item);\n    }\n\n    return subtotal;\n  }\n\n  calculateTax() {\n    return this.calculateSubtotal() * 0.05; // Assuming 5% tax rate\n  }\n\n  calculateShipping() {\n    return 15.00; // Replace with your actual shipping cost calculation\n  }\n\n  calculateGrandTotal() {\n    return this.calculateSubtotal() + this.calculateTax() + this.calculateShipping();\n  }\n\n  sendEmails() {\n    console.log(this.userDetail['phoneNumber']);\n    this.btnValue = 'Sending...';\n    const serviceID = 'default_service';\n    const templateID = 'template_ymlrotd';\n    const userID = 'LbNjrA62NgKQo88NX'; // Replace with your actual User ID\n\n    emailjs.send(serviceID, templateID, {\n      from_name: 'your valuable customer',\n      to_name: 'Annapurna Wholesale',\n      email_id: this.actualEmail,\n      customerName: this.userDetail['name'],\n      phone_number: this.userDetail['phoneNumber'],\n      address: this.userDetail['address'],\n      state: this.userDetail['state'],\n      city: this.userDetail['city'],\n      einNumber: this.userDetail['einNumber'],\n      company: this.userDetail['companyName'],\n      message: this.generateEmailMessage(),\n      reply_to: this.actualEmail\n    }, userID).then(() => {\n      this.btnValue = 'Send Email';\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n      }, 2000);\n      alert('Sent!');\n    }, err => {\n      this.btnValue = 'Send Email';\n      alert(JSON.stringify(err));\n    });\n  }\n\n  generateEmailMessage() {\n    let message = '';\n    this.cartItems.forEach(item => {\n      message += `Product Name: ${item.productName}\\n`;\n      message += `Product Description: ${item.productDescription}\\n`;\n      message += `Product Price: ${item.productPrice}\\n`;\n      message += `Product Quantity: ${item.quantity}\\n\\n`;\n    });\n    console.log(message);\n    return message;\n  }\n\n  openModal() {\n    this.showModal = true;\n  }\n\n  closeModal() {\n    this.showModal = false;\n  }\n\n  calculateItemTotal(item) {\n    const quantity = parseInt(item.quantity);\n\n    if (isNaN(quantity)) {\n      return 0; // Return 0 if quantity is not a valid number\n    }\n\n    console.log(item);\n    return parseInt(item.productPrice) * quantity;\n  }\n\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})], CartComponent);\nexport { CartComponent };","map":null,"metadata":{},"sourceType":"module"}