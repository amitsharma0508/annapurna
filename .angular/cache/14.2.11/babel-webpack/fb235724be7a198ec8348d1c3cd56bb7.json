{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { finalize } from \"rxjs/operators\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/storage\";\nimport * as i2 from \"src/app/shared/image.service\";\nexport let WarehouseComponent = /*#__PURE__*/(() => {\n  class WarehouseComponent {\n    constructor(storage, service) {\n      this.storage = storage;\n      this.service = service;\n      this.selectedImage = null;\n      this.selectedImage1 = null;\n      this.selectedImage2 = null;\n      this.CigarettesForm = new FormGroup({\n        id: new FormControl(\"\", Validators.required),\n        productName: new FormControl(\"\", Validators.required),\n        productPrice: new FormControl(\"\"),\n        productDescription: new FormControl(\"\", Validators.required),\n        productType: new FormControl(\"\", Validators.required),\n        imageUrl: new FormControl(\"\", Validators.required),\n        imageUrl1: new FormControl(\"\"),\n        imageUrl2: new FormControl(\"\")\n      });\n      this.toggleAddForm = false;\n      this.toggleViewProduct = false;\n      this.database = firebase.database();\n    }\n\n    ngOnInit() {\n      //fetching the data\n      this.service.cigarettesDetails.snapshotChanges().subscribe(list => {\n        this.imageList = list.map(item => {\n          return item.payload.val();\n        });\n        this.rowIndexArray = Array.from(Array(Math.ceil((this.imageList.length + 1) / 3)).keys());\n      }); //resetting the form\n\n      this.resetForm();\n    } //making the adding form visible\n\n\n    openAddForm() {\n      this.toggleViewProduct = false;\n      this.toggleAddForm = true;\n    } //making the viewProduct visible\n\n\n    viewProduct() {\n      this.toggleAddForm = false;\n      this.toggleViewProduct = true;\n    } //preview image\n\n\n    showPreview(event) {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = e => this.imgSrc = e.target.result;\n\n        reader.readAsDataURL(event.target.files[0]);\n        this.selectedImage = event.target.files[0];\n      } else {\n        this.imgSrc = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQr1wpLe7tCBNs9lRZIH-8qMa8HI69GZu76QQ&usqp=CAU\";\n        this.selectedImage = null;\n      }\n    }\n\n    showPreview1(event) {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = e => this.imgSrc = e.target.result;\n\n        reader.readAsDataURL(event.target.files[0]);\n        this.selectedImage1 = event.target.files[0];\n      } else {\n        this.imgSrc3 = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQr1wpLe7tCBNs9lRZIH-8qMa8HI69GZu76QQ&usqp=CAU\";\n        this.selectedImage1 = null;\n      }\n    }\n\n    showPreview2(event) {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n\n        reader.onload = e => this.imgSrc = e.target.result;\n\n        reader.readAsDataURL(event.target.files[0]);\n        this.selectedImage2 = event.target.files[0];\n      } else {\n        this.imgSrc = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQr1wpLe7tCBNs9lRZIH-8qMa8HI69GZu76QQ&usqp=CAU\";\n        this.selectedImage2 = null;\n      }\n    } //onSubmit\n    // onSubmit(formValue) {\n    //   this.isSubmitted = true;\n    //   if (this.CigarettesForm.valid) {\n    //     var filePath = `${formValue.productType}/${this.selectedImage.name\n    //       .split(\".\")\n    //       .slice(0, -1)\n    //       .join(\".\")}_${new Date().getTime()}`;\n    //     const fileRef = this.storage.ref(filePath);\n    //     this.storage\n    //       .upload(filePath, this.selectedImage)\n    //       .snapshotChanges()\n    //       .pipe(\n    //         finalize(() => {\n    //           fileRef.getDownloadURL().subscribe((url) => {\n    //             formValue[\"imageUrl\"] = url;\n    //             console.log(this.CigarettesForm.value);\n    //             console.log(formValue);\n    //             this.service.insertCigarettesDetails(this.CigarettesForm.value);\n    //             console.log(formValue);\n    //             this.resetForm();\n    //           });\n    //         })\n    //       )\n    //       .subscribe();\n    //   }\n    // }\n\n\n    onSubmit(formValue) {\n      this.isSubmitted = true;\n\n      if (this.CigarettesForm.valid) {\n        var filePath1 = `${formValue.productType}/${this.selectedImage.name.split(\".\").slice(0, -1).join(\".\")}_${new Date().getTime()}`;\n        var filePath2 = `${formValue.productType}/${this.selectedImage1.name.split(\".\").slice(0, -1).join(\".\")}_${new Date().getTime()}`;\n        var filePath3 = `${formValue.productType}/${this.selectedImage2.name.split(\".\").slice(0, -1).join(\".\")}_${new Date().getTime()}`;\n        const fileRef1 = this.storage.ref(filePath1);\n        const fileRef2 = this.storage.ref(filePath2);\n        const fileRef3 = this.storage.ref(filePath3); // Upload the first image\n\n        this.storage.upload(filePath1, this.selectedImage).snapshotChanges().pipe(finalize(() => {\n          fileRef1.getDownloadURL().subscribe(url1 => {\n            formValue[\"imageUrl\"] = url1; // Upload the second image\n\n            this.storage.upload(filePath2, this.selectedImage1).snapshotChanges().pipe(finalize(() => {\n              fileRef2.getDownloadURL().subscribe(url2 => {\n                formValue[\"imageUrl1\"] = url2; // Upload the third image\n\n                this.storage.upload(filePath3, this.selectedImage2).snapshotChanges().pipe(finalize(() => {\n                  fileRef3.getDownloadURL().subscribe(url3 => {\n                    formValue[\"imageUrl2\"] = url3; // Insert grocery details\n\n                    console.log(formValue);\n                    this.service.insertCigarettesDetails(this.CigarettesForm.value);\n                    console.log(formValue);\n                    this.resetForm();\n                  });\n                })).subscribe();\n              });\n            })).subscribe();\n          });\n        })).subscribe();\n      }\n    } //\n\n\n    get formControls() {\n      return this.CigarettesForm[\"controls\"];\n    } //resetting the form after submit\n\n\n    resetForm() {\n      this.CigarettesForm.reset();\n      this.CigarettesForm.setValue({\n        id: Math.random().toString(36).substring(2, 7),\n        productName: \"\",\n        productPrice: \"\",\n        productDescription: \"\",\n        productType: \"\",\n        imageUrl: \"\",\n        imageUrl1: \"\",\n        imageUrl2: \"\"\n      });\n      this.imgSrc = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQr1wpLe7tCBNs9lRZIH-8qMa8HI69GZu76QQ&usqp=CAU\";\n      this.imgSrc2 = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQr1wpLe7tCBNs9lRZIH-8qMa8HI69GZu76QQ&usqp=CAU\";\n      this.imgSrc3 = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQr1wpLe7tCBNs9lRZIH-8qMa8HI69GZu76QQ&usqp=CAU\";\n      this.selectedImage = null;\n      this.isSubmitted = false;\n    } //deleting\n\n\n    deleteCigrattesItem(item, itemID) {\n      console.log(\"Deleting item with key:\", itemID);\n      const cigarettesListRef = firebase.database().ref(\"cigarettesList\");\n      let itemKey; // Find the key of the item with the given product name\n\n      cigarettesListRef.orderByChild(\"id\").equalTo(itemID).once(\"value\", snapshot => {\n        snapshot.forEach(childSnapshot => {\n          itemKey = childSnapshot.key;\n        });\n      }); // Remove the image from storage\n\n      const storageRef = firebase.storage().refFromURL(item.imageUrl);\n      storageRef.delete().then(() => {\n        console.log(\"Image deleted successfully\");\n      }).catch(error => {\n        console.log(\"Error deleting image:\", error);\n      });\n      const storageRef1 = firebase.storage().refFromURL(item.imageUrl1);\n      storageRef1.delete().then(() => {\n        console.log(\"Image deleted successfully\");\n      }).catch(error => {\n        console.log(\"Error deleting image:\", error);\n      });\n      const storageRef2 = firebase.storage().refFromURL(item.imageUrl2);\n      storageRef2.delete().then(() => {\n        console.log(\"Image deleted successfully\");\n      }).catch(error => {\n        console.log(\"Error deleting image:\", error);\n      }); // Remove the corresponding data from the real-time database\n      // Remove the corresponding data from the real-time database\n\n      cigarettesListRef.child(itemKey).remove().then(() => {\n        console.log(\"Data deleted successfully\");\n      }).catch(error => {\n        console.log(\"Error deleting data:\", error);\n      });\n    }\n\n  }\n\n  WarehouseComponent.ɵfac = function WarehouseComponent_Factory(t) {\n    return new (t || WarehouseComponent)(i0.ɵɵdirectiveInject(i1.AngularFireStorage), i0.ɵɵdirectiveInject(i2.ImageService));\n  };\n\n  WarehouseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WarehouseComponent,\n    selectors: [[\"app-warehouse\"]],\n    decls: 2,\n    vars: 0,\n    template: function WarehouseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"warehouse works!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return WarehouseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}