{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport 'firebase/database';\nlet AppComponent = class AppComponent {\n  constructor(router, firebase, service, afAuth) {\n    this.router = router;\n    this.firebase = firebase;\n    this.service = service;\n    this.afAuth = afAuth; // @ViewChild('f') form!:NgForm;\n\n    this.title = 'teleport-project-template-angular';\n    this.checkUrl = true;\n    this.checkAuth = true;\n    this.dialogOpen = false;\n    this.isSignUp = false;\n    this.isLoggedIn = false;\n  }\n\n  ngAfterViewInit() {\n    const button = document.querySelector('button[onclick=\"window.dialog.showModal();\"]');\n\n    if (button) {\n      button.dispatchEvent(new Event('click'));\n    }\n  }\n\n  ngOnInit() {\n    const script1 = document.createElement('script');\n    script1.src = 'assets/img/side-nav-toggle.js';\n    document.head.appendChild(script1);\n    this.service.getinsertGroceryDetails();\n    this.service.getInsertCigarettesDetails();\n    this.service.getDespicableVapeDetails();\n    this.service.getElectronicDetails();\n    this.service.getHealthAndBeautyDetails();\n    this.service.getProduceDetails();\n    this.service.getTobaccoDetails();\n    this.service.getWareHouseDetails();\n    this.service.getAccessoriesDetails();\n    this.service.getHouseholdDetails();\n    this.service.getfeaturedDetails();\n    this.service.gettrendingProductsDetails();\n    this.service.getUserDetails(); // detection of url and writing logic\n    // start\n\n    this.service.getDatas().subscribe(data => {\n      this.receivedData = data;\n      console.log(this.receivedData + \"recieved data\");\n    });\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      this.currentRoute = event.url;\n      console.log(this.currentRoute);\n\n      if (event.url == \"/admin\") {\n        this.checkUrl = false;\n      } else {\n        this.checkUrl = true;\n      }\n    }); //end\n  } //cart\n\n\n  cart() {\n    this.router.navigate(['/cart']);\n  } //submit\n\n\n  confirm(form) {\n    if (form.valid) {\n      // Handle the form submission logic here\n      console.log(this.form.value); // Close the dialog\n      // const dialog = document.getElementById('dialog') as HTMLDialogElement;\n      // setTimeout(() => {\n      //   dialog.close();\n      // }, 2000);\n    } else {// Show error messages or handle the incomplete form case\n    }\n  } //dryGrocery function\n\n\n  dryGrocery() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"dryGrocery\",\n        type: \"dryGrocery\"\n      },\n      replaceUrl: true\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  } //Cigarette function\n\n\n  cigarette() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"cigarettes\",\n        type: \"cigarettes\"\n      },\n      replaceUrl: true\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  } //despicableVape function\n\n\n  despicableVape() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"despicableVape\",\n        type: \"despicableVape\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  } //electronic function\n\n\n  electronic() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"electronic\",\n        type: \"electronic\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  } //health&Beauty function\n\n\n  healthAndBeauty() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"healthAndBeauty\",\n        type: \"healthAndBeauty\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  } //produce function\n\n\n  produce() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"produce\",\n        type: \"produce\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  } //tobacco function\n\n\n  tobacco() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"tobacco\",\n        type: \"tobacco\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  }\n\n  wareHouse() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"wareHouse\",\n        type: \"wareHouse\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  }\n\n  accessories() {\n    this.router.navigate(['']);\n    let navigationExtras = {\n      queryParams: {\n        param: \"accessories\",\n        type: \"accessories\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  }\n\n  household() {\n    let navigationExtras = {\n      queryParams: {\n        param: \"household\",\n        type: \"household\"\n      }\n    };\n    this.router.navigate(['/product'], navigationExtras).then(() => {// window.location.reload();\n    });\n  }\n\n  redirect() {\n    // const button = document.querySelector('button[onclick=\"window.dialog.showModal();\"]');\n    // if (button) {\n    //   button.dispatchEvent(new Event('click'));\n    // }\n    this.isLoggedIn = true; // Set dialogOpen to true only when triggered\n  }\n\n  login() {\n    this.checkUrl = false;\n    this.afAuth.signInWithEmailAndPassword(this.email, this.password).then(userCredential => {\n      // Get the current user from the userCredential object\n      const user = userCredential.user; // Access the user properties\n\n      console.log('Current user:', user);\n      console.log('User email:', user.email);\n      this.isLoggedIn = false;\n      let navigationExtras = {\n        queryParams: {\n          actualEmail: user.email,\n          email: user.uid\n        }\n      };\n      this.router.navigate(['/cart'], navigationExtras); // Navigate to cart page only when dialogOpen is true\n      // this.dialogOpen=false;\n    }).catch(error => {\n      this.errorMessage = error.message;\n      console.log(this.errorMessage);\n    });\n  } // userDetails:AngularFireList<any>;\n  // getUserDetails(){\n  //   this.userDetails= this.firebase.list('userDetails')\n  // }\n  // insertUserDetails(userList){\n  //   console.log(\"trigreed\")\n  //   this.userDetails.push(userList)\n  // }\n\n\n  signup() {\n    this.afAuth.createUserWithEmailAndPassword(this.email, this.password).then(() => {\n      // Push data to Firebase Realtime Database\n      const userData = {\n        name: this.name,\n        companyName: this.companyName,\n        address: this.address,\n        state: this.state,\n        city: this.city,\n        einNumber: this.einNumber,\n        phoneNumber: this.phoneNumber,\n        email: this.email\n      };\n      console.log(userData);\n      this.service.insertUserDetails(userData);\n      console.log(userData); // Redirect or do something after successful signup\n\n      this.toggleSignup();\n    }).catch(error => {\n      this.errorMessage = error.message;\n      console.log(\"trigerred\" + this.errorMessage);\n    });\n  }\n\n  toggleSignup() {\n    this.isSignUp = !this.isSignUp;\n    this.errorMessage = null;\n    this.email = '';\n    this.password = '';\n  }\n\n};\n\n__decorate([ViewChild('susbcFormModal')], AppComponent.prototype, \"susbcFormModal\", void 0);\n\n__decorate([ViewChild('f')], AppComponent.prototype, \"form\", void 0);\n\n__decorate([ViewChild('closeButton')], AppComponent.prototype, \"closeButton\", void 0);\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}